name: 🚀 Deploy to Staging

on:
  push:
    branches: [main]

concurrency:
  group: deploy-staging
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (needed for .github/*)
        uses: actions/checkout@v4

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add Staging Host to known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host:       ${{ secrets.HOST }}
          username:   ${{ secrets.USER }}
          key:        ${{ secrets.SSH_KEY }}
          port:       22
          script: |
            set -euo pipefail

            cd ${{ secrets.APP_DIR }}

            echo "🧪 Writing .env for staging"
            cat > .env << 'EOF'
            ENVIRONMENT=staging
            PROJECT_NAME=${{ secrets.PROJECT_NAME }}
            DOMAIN=staging.${{ secrets.DOMAIN }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            SECURE_COOKIE=True
            SAME_SITE="none"
            FRONTEND_HOST=${{ secrets.FRONTEND_HOST }}
            SENTRY_DSN=https://af0ca245381dd28d3811b8fe409afd00@o4508731371028480.ingest.us.sentry.io/4508731372339200
            FIRST_SUPERUSER=${{ secrets.FIRST_SUPERUSER }}
            FIRST_SUPERUSER_PASSWORD=${{ secrets.FIRST_SUPERUSER_PASSWORD }}
            BACKEND_CORS_ORIGINS=${{ secrets.BACKEND_CORS_ORIGINS }}
            MONGODB_SERVER=${{ secrets.MONGODB_SERVER }}
            MONGODB_USER=${{ secrets.MONGODB_USER }}
            MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}
            NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_USER=${{ secrets.SMTP_USER }}
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            S3_BUCKET=${{ secrets.S3_BUCKET }}
            S3_REGION=${{ secrets.S3_REGION }}
            S3_ENDPOINT_URL=${{ secrets.S3_ENDPOINT_URL }}
            AWS_ACCESS_KEY_ID=${{ secrets.S3_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.S3_SECRET_ACCESS_KEY }}
            TRAEFIK_DASH_USERS=${{ secrets.TRAEFIK_DASH_USERS }}
            EOF

            echo "🐳 Pulling & restarting containers"
            docker compose pull
            docker compose up -d

            echo "✅ Staging deployed!"



