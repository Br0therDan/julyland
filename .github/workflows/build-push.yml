name: ðŸ“¦ Build & Push Docker Images

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

concurrency:
  group: build-push-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}
  BUILDX_BAKE_ENTITLEMENTS_FS: 0


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multiâ€‘arch, optional)
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Restore Build Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compute image tags
        id: meta
        run: |
          echo "sha=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT
          echo "branch=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT


      - name: Build & Push
        uses: docker/bake-action@v4
        with:
          files: docker-bake.hcl
          targets: default
          push: true
          set: |
            *.tags=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/{{target}}:${{ steps.meta.outputs.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/{{target}}:${{ steps.meta.outputs.branch }}
            *.cache-from=type=local,src=/tmp/.buildx-cache
            *.cache-to=type=local,dest=/tmp/.buildx-cache,mode=max
        
        
      # - name: Build & Push with Bake
      #   uses: docker/bake-action@v4
      #   with:
      #     files: docker-bake.hcl
      #     push: true
      #     # inject two tags per service: short SHA, plus branch name
      #     set: |
      #       *.tags=${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/{{target}}:${{ steps.meta.outputs.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/{{target}}:${{ steps.meta.outputs.branch }}
      #       *.cache-from=type=local,src=/tmp/.buildx-cache
      #       *.cache-to=type=local,dest=/tmp/.buildx-cache,mode=max
