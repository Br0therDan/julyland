
services:

  management:
    build:
      context: ./backend/management
    container_name: management-jl
    restart: always
    env_file:
      - .env
    depends_on:
      mongodb:
        condition: service_started
    networks:
      - internal
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health-check"]
      interval: 5s
      retries: 5
      timeout: 3s
    labels:
      traefik.enable:            "true"
      traefik.docker.network:    "web"
      traefik.http.services.management.loadbalancer.server.port: "8000"
      traefik.http.routers.management.rule:         "Host(`management.${DOMAIN}`)"
      traefik.http.routers.management.entrypoints:  "websecure"
      traefik.http.routers.management.tls:          "true"
      traefik.http.routers.management.tls.certresolver: "le"

  frontend:
    build:
      context: ./frontend
    container_name: jl-frontend
    restart: always
    env_file: [".env"]
    networks:
      - internal
      - web
    labels:
      traefik.enable:            "true"
      traefik.docker.network:    "web"
      traefik.http.services.frontend.loadbalancer.server.port: "3000"
      traefik.http.routers.frontend.rule:        "Host(`${DOMAIN}`)"
      traefik.http.routers.frontend.entrypoints: "websecure"
      traefik.http.routers.frontend.tls:         "true"
      traefik.http.routers.frontend.tls.certresolver: "le"


volumes:
  mongo-data:

networks:
  web:
    external: true
  internal:
    driver: bridge
      
